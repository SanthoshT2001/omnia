#  Copyright 2022 Dell Inc. or its subsidiaries. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
# Testcase to validate xcat installation
- name: OMNIA_1.4_XCAT_TC_001
  hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/test_vars/test_xcat_vars.yml"
    - "{{ playbook_dir }}/../../input/provision_config.yml"
  tasks:
    - name: Validate xCAT installation
      block:
        - name: Identify xCAT is installed or not
          ansible.builtin.shell: /etc/profile.d/xcat.sh | {{ xcat_sbin_path }}/tabdump site
          register: xcat_installation_msg
          no_log: true

        - name: Validate xcat is installed or not
          ansible.builtin.assert:
            that:
              - "'command not found' not in xcat_installation_msg.stderr"
            success_msg: "{{ xcat_installation_success_msg }}"
            fail_msg: "{{ xcat_installation_fail_msg }}"
      tags: XCAT_TC_001

# Testcase to validate status of services for xcat
- name: OMNIA_1.4_XCAT_TC_002
  hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/test_vars/test_xcat_vars.yml"
    - "{{ playbook_dir }}/../../input/provision_config.yml"
  tasks:
    - name: Validate xCAT service is running
      block:
        - name: Check the status of xcatd service
          ansible.builtin.shell: systemctl status xcatd
          register: xcat_status
          no_log: true

        - name: Check the status of postgresql service
          ansible.builtin.shell: systemctl status postgresql.service
          register: postgres_status
          no_log: true

        - name: Validate xcat service to be running
          ansible.builtin.assert:
            that:
              - "'active' in xcat_status.stdout"
            success_msg: "{{ xcat_status_success_msg }}"
            fail_msg: " {{ xcat_status_fail_msg }}"

        - name: Validate postgresql service to be running
          ansible.builtin.assert:
            that:
              - "'active' in postgres_status.stdout"
            success_msg: "{{ postgres_status_success_msg }}"
            fail_msg: "{{ postgres_status_fail_msg }}"
      tags: XCAT_TC_002

# Testcase to validate xcatd and postgresql service is enabled
- name: OMNIA_1.4_XCAT_TC_003
  hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/test_vars/test_xcat_vars.yml"
    - "{{ playbook_dir }}/../../input/provision_config.yml"
  tasks:
    - name: Validate xCAT service is running
      block:
        - name: Get the status of xcatd service
          ansible.builtin.shell: systemctl status xcatd | grep /usr/lib/systemd/system/xcatd.service
          register: enable_xcat_status

        - name: Get the status of postgresql service
          ansible.builtin.shell: systemctl status xcatd | grep /usr/lib/systemd/system/xcatd.service
          register: enable_postgres_status

        - name: Validate xcat service to be enabled
          ansible.builtin.assert:
            that:
              - "'enabled' in enable_xcat_status.stdout"
            success_msg: "{{ xcat_enabled_success_msg }}"
            fail_msg: "{{ xcat_enabled_fail_msg }}"

        - name: Validate postgresql service to be enabled
          ansible.builtin.assert:
            that:
              - "'enabled' in enable_postgres_status.stdout"
            success_msg: "{{ postgres_enabled_success_msg }}"
            fail_msg: "{{ postgres_enabled_fail_msg }}"
      tags: XCAT_TC_003

# Testcase to validate user defined domain name configuration in xcat
- name: OMNIA_1.4_XCAT_TC_004
  hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/test_vars/test_xcat_vars.yml"
    - "{{ playbook_dir }}/../../input/provision_config.yml"
  tasks:
    - name: Validate user defined domain name configuration in xcat
      block:
        - name: Identify xCAT is installed or not
          ansible.builtin.shell: /etc/profile.d/xcat.sh | {{ xcat_sbin_path }}/tabdump site
          register: xcat_installation_msg
          no_log: true

        - name: Check domain name in xcat
          ansible.builtin.shell: source /etc/profile.d/xcat.sh | {{ xcat_sbin_path }}/tabdump site | grep domain
          register: site_table_details
          when: (xcat_installation_msg.stdout != "")

        - name: Validate xcat service to be running
          ansible.builtin.assert:
            that:
              - "'{{ domain_name }}' in site_table_details.stdout"
            success_msg: "{{ domain_present_success_msg }}"
            fail_msg: "{{ no_domain_fail_msg }}"
      tags: XCAT_TC_004

# Testcase to Validate OS Image creation
- name: OMNIA_1.4_XCAT_TC_005
  hosts: localhost
  vars_files:
    - "{{ playbook_dir }}/test_vars/test_xcat_vars.yml"
    - "{{ playbook_dir }}/../../input/provision_config.yml"
  tasks:
    - name: Validate OS image creation
      block:
        - name: Identify xcat installation
          ansible.builtin.shell: /etc/profile.d/xcat.sh | {{ xcat_sbin_path }}/tabdump site
          register: xcat_installation_msg
          no_log: true

        - name: Get the OS image details
          ansible.builtin.shell: "{{ xcat_path }}/lsdef -t osimage | grep install-compute"
          register: xcat_os_image_details
          when: (xcat_installation_msg.stdout != "")

        - name: Validate xcat OS image
          ansible.builtin.assert:
            that:
              - "'{{ provision_os }}' in xcat_os_image_details.stdout"
            success_msg: "{{ os_image_present_success_msg }}"
            fail_msg: "{{ no_os_image_fail_msg }}"
      tags: XCAT_TC_005