# Copyright 2024 Dell Inc. or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

- name: Set upgrade status
  hosts: localhost
  connection: local
  tasks:
    - name: Validate omnia version
      ansible.builtin.include_role:
        name: "{{ playbook_dir }}/roles/validate_omnia_version"  # noqa:role-name[path]

# This playbook should be invoked with -i option pointing to omnia 1.5 inventory file
- name: Validate parameters
  hosts: localhost
  connection: local
  tasks:
    - name: Validate parameters
      when: upgrade_status
      block:
        - name: Encrypt inputs
          ansible.builtin.include_role:
            name: encrypt_inputs

        - name: Validate input configs
          ansible.builtin.include_role:
            name: validate_input_configs

- name: Cleanup Control plane
  hosts: localhost
  connection: local
  tasks:
    - name: Cleanup Control plane
      when: upgrade_status
      block:
        - name: Docker registry uninstall
          ansible.builtin.include_role:
            name: docker_registry_uninstall

        - name: Telemetry uninstall
          ansible.builtin.include_role:
            name: telemetry_uninstall

# Uninstall k8s on omnia 1.5 cluster
- name: Uninstall kubernetes on k8s worker
  hosts: compute
  tasks:
    - name: Uninstall kubernetes
      when: upgrade_status
      block:
        - name: Uninstall k8s cluster
          ansible.builtin.include_role:
            name: uninstall_k8s_cluster

        - name: Preinstall cluster cleanup
          ansible.builtin.include_role:
            name: preinstall_cluster_cleanup

- name: Uninstall kubernetes on k8s manager
  hosts: manager
  tasks:
    - name: Uninstall kubernetes
      when: upgrade_status
      block:
        - name: Uninstall k8s cluster
          ansible.builtin.include_role:
            name: uninstall_k8s_cluster

        - name: Preinstall cluster cleanup
          ansible.builtin.include_role:
            name: preinstall_cluster_cleanup

- name: Uninstall openldap
  hosts: manager, compute, login
  tasks:
    - name: Uninstall openldap
      when: upgrade_status
      block:
        - name: Uninstall open_ldap
          ansible.builtin.include_role:
            name: uninstall_open_ldap

- name: Run local_repo.yml on new input directory
  ansible.builtin.import_playbook: "{{ playbook_dir}}/../local_repo/local_repo.yml"
  when: upgrade_status

- name: Invoke omnia 1.6 prepare_cp roles # noqa:role-name[path]
  hosts: localhost
  connection: local
  tasks:
    - name: Invoke omnia 1.6 prepare_cp
      when: upgrade_status
      block:
        - name: Invoke configure proxy
          ansible.builtin.include_role:
            name: "{{ playbook_dir }}/../prepare_cp/roles/configure_proxy"  # noqa:role-name[path]

        - name: Invoke telemetry cp
          ansible.builtin.include_role:
            name: "{{ playbook_dir }}/../prepare_cp/roles/omnia_telemetry_cp" # noqa:role-name[path]

        - name: Invoke omnia appliance
          ansible.builtin.include_role:
            name: "{{ playbook_dir }}/../prepare_cp/roles/omnia_appliance_cp" # noqa:role-name[path]

        - name: Upgrade omniadb
          ansible.builtin.include_role:
            name: upgrade_omniadb

        - name: Upgrade xcat
          ansible.builtin.include_role:
            name: upgrade_xcat

        - name: Invoke prepare_cp
          ansible.builtin.include_role:
            name: prepare_cp_for_upgrade

        - name: Import input parameters
          ansible.builtin.include_role:
            name: metadata_update

- name: Display User Message
  hosts: localhost
  connection: local
  tasks:
    - name: Include user message
      ansible.builtin.include_role:
        name: "{{ playbook_dir }}/roles/user_messages"  # noqa:role-name[path]

    - name: Print user upgrade message
      ansible.builtin.debug:
        msg: "{{ user_msg_prepare_upgrade.split('\n') }}"
      when: upgrade_status

    - name: Print user message
      ansible.builtin.debug:
        msg: "{{ user_msg_prepare_upgrade2.split('\n') }}"
      when: not upgrade_status
